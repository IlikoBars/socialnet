from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import List
from uuid import uuid4

app = FastAPI()

# ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å —Ñ—Ä–æ–Ω—Ç–∞ (Next.js –Ω–∞ localhost –∏ IP –ø–æ –ª–æ–∫–∞–ª–∫–µ)
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://172.20.10.2:3000",  # ‚Üê IP —Ç–≤–æ–µ–≥–æ MacBook –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# üß† –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class Post(BaseModel):
    id: str
    title: str
    content: str

# üóÇÔ∏è –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å—Ç–æ–≤
posts_db: List[Post] = []

# üìÆ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã
@app.get("/posts")
def get_posts():
    return posts_db

# ‚úèÔ∏è –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç
@app.post("/posts")
def create_post(post: Post):
    post.id = str(uuid4())
    posts_db.append(post)
    return {"message": "–ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω", "id": post.id}

# üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
@app.get("/")
def root():
    return {"message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç üöÄ"}


