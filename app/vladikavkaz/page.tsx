'use client';
import React, { useState, useEffect } from 'react';
import { VladikavkazMap, DistrictsList } from '../../components/organisms';
import { AttractionsList } from '../../components/organisms/AttractionsList';
import { Attraction } from '../../components/molecules/AttractionCard';
import { District } from '../../data/vladikavkazDistricts';

interface AttractionsData {
  attractions: Attraction[];
  districts: District[];
}

export default function VladikavkazPage() {
  const [attractionsData, setAttractionsData] = useState<AttractionsData | null>(null);
  const [selectedDistrict, setSelectedDistrict] = useState<District | null>(null);
  const [filteredAttractions, setFilteredAttractions] = useState<Attraction[]>([]);
  const [viewMode, setViewMode] = useState<'map' | 'list'>('map');
  const [selectedAttraction, setSelectedAttraction] = useState<Attraction | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const loadDemoData = async () => {
      try {
        setLoading(true);
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        const demoAttractions: Attraction[] = [
          {
            id: 'attraction_1',
            name: '–ü–∞–º—è—Ç–Ω–∏–∫ –ö–æ—Å—Ç–∞ –•–µ—Ç–∞–≥—É—Ä–æ–≤—É',
            category: '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            district: '–ú–∞–¥—Ä–∏–¥',
            address: '–ø–ª. –°–≤–æ–±–æ–¥—ã',
            lat: 43.0532,
            lng: 44.6668,
            description: '–ü–∞–º—è—Ç–Ω–∏–∫ –æ—Å–µ—Ç–∏–Ω—Å–∫–æ–º—É –ø–æ—ç—Ç—É –∏ –ø—Ä–æ—Å–≤–µ—Ç–∏—Ç–µ–ª—é',
            type: 'attraction',
            rating: 4.8,
            reviewsCount: 156
          },
          {
            id: 'attraction_2',
            name: '–û—Å–µ—Ç–∏–Ω—Å–∫–∏–π –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–∞—Ç—Ä',
            category: '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            district: '–ö—É—Ä—Å–∫–∞—è',
            address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 3',
            lat: 43.0576,
            lng: 44.6642,
            description: '–ì–ª–∞–≤–Ω—ã–π —Ç–µ–∞—Ç—Ä –†–µ—Å–ø—É–±–ª–∏–∫–∏ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è',
            type: 'attraction',
            rating: 4.6,
            reviewsCount: 89
          },
          {
            id: 'attraction_3',
            name: '–ü–∞—Ä–∫ –∏–º. –ö–æ—Å—Ç–∞ –•–µ—Ç–∞–≥—É—Ä–æ–≤–∞',
            category: '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            district: '–õ–æ–Ω–¥–æ–Ω',
            address: '—É–ª. –ú–∏—Ä–∞',
            lat: 43.0664,
            lng: 44.6590,
            description: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∫ –≥–æ—Ä–æ–¥–∞ —Å —Ñ–æ–Ω—Ç–∞–Ω–∞–º–∏',
            type: 'attraction',
            rating: 4.7,
            reviewsCount: 234
          },
          {
            id: 'attraction_4',
            name: '–ú–µ–º–æ—Ä–∏–∞–ª –°–ª–∞–≤—ã',
            category: '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            district: '–í–∞—Ç–∏–∫–∞–Ω',
            address: '—É–ª. –ú–æ—Ä–¥–æ–≤—Ü–µ–≤–∞',
            lat: 43.0686,
            lng: 44.6577,
            description: '–ü–∞–º—è—Ç–Ω–∏–∫ –≤–æ–∏–Ω–∞–º –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã',
            type: 'attraction',
            rating: 4.9,
            reviewsCount: 312
          },
          {
            id: 'attraction_5',
            name: '–ù–∞–±–µ—Ä–µ–∂–Ω–∞—è —Ä–µ–∫–∏ –¢–µ—Ä–µ–∫',
            category: '–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            district: '–°–∞–Ω—Ç–∞-–ë–∞—Ä–±–∞—Ä–∞',
            address: '–Ω–∞–±. –¢–µ—Ä–µ–∫–∞',
            lat: 43.0251,
            lng: 44.6833,
            description: '–ö—Ä–∞—Å–∏–≤–∞—è –Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è —Å –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä—ã',
            type: 'attraction',
            rating: 4.5,
            reviewsCount: 178
          },
          {
            id: 'shaurma_1',
            name: '–®–∞—É—Ä–º–∞ "–ö–∞–≤–∫–∞–∑"',
            category: '–®–∞—É—Ä–º–∞ –∏ —Ñ–∞—Å—Ç—Ñ—É–¥',
            district: '–ú–∞–¥—Ä–∏–¥',
            address: '—É–ª. –õ–µ–Ω–∏–Ω–∞, 25',
            lat: 43.0532,
            lng: 44.6668,
            description: '–õ—É—á—à–∞—è —à–∞—É—Ä–º–∞ –≤ –≥–æ—Ä–æ–¥–µ –ø–æ –æ—Ç–∑—ã–≤–∞–º',
            type: 'shaurma',
            rating: 4.9,
            reviewsCount: 456,
            price: '–æ—Ç 150‚ÇΩ',
            workingHours: '09:00-23:00'
          },
          {
            id: 'shaurma_2',
            name: '–î–æ–Ω–µ—Ä "–¢–µ—Ä–µ–∫"',
            category: '–®–∞—É—Ä–º–∞ –∏ —Ñ–∞—Å—Ç—Ñ—É–¥',
            district: '–õ–æ–Ω–¥–æ–Ω',
            address: '–ø—Ä. –ú–∏—Ä–∞, 15',
            lat: 43.0664,
            lng: 44.6590,
            description: '–¢—É—Ä–µ—Ü–∫–∏–π –¥–æ–Ω–µ—Ä –∫–µ–±–∞–±',
            type: 'shaurma',
            rating: 4.7,
            reviewsCount: 234,
            price: '–æ—Ç 180‚ÇΩ',
            workingHours: '10:00-22:00'
          },
          {
            id: 'shaurma_3',
            name: '–®–∞–≤–µ—Ä–º–∞ "–ë—ã—Å—Ç—Ä–æ"',
            category: '–®–∞—É—Ä–º–∞ –∏ —Ñ–∞—Å—Ç—Ñ—É–¥',
            district: '–°–∞–Ω—Ç–∞-–ë–∞—Ä–±–∞—Ä–∞',
            address: '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 8',
            lat: 43.0251,
            lng: 44.6833,
            description: '–ë—ã—Å—Ç—Ä–æ –∏ –≤–∫—É—Å–Ω–æ',
            type: 'shaurma',
            rating: 4.3,
            reviewsCount: 123,
            price: '–æ—Ç 120‚ÇΩ',
            workingHours: '08:00-24:00'
          },
          {
            id: 'shaurma_4',
            name: '–ö–µ–±–∞–± "–û—Å–µ—Ç–∏—è"',
            category: '–®–∞—É—Ä–º–∞ –∏ —Ñ–∞—Å—Ç—Ñ—É–¥',
            district: '–ö—É—Ä—Å–∫–∞—è',
            address: '—É–ª. –ö–æ—Ü–æ–µ–≤–∞, 42',
            lat: 43.0576,
            lng: 44.6642,
            description: '–û—Å–µ—Ç–∏–Ω—Å–∫–∏–π –∫–µ–±–∞–± —Å –º–µ—Å—Ç–Ω—ã–º–∏ —Å–ø–µ—Ü–∏—è–º–∏',
            type: 'shaurma',
            rating: 4.8,
            reviewsCount: 345,
            price: '–æ—Ç 200‚ÇΩ',
            workingHours: '11:00-21:00'
          },
          {
            id: 'shaurma_5',
            name: '–§–∞—Å—Ç—Ñ—É–¥ "–ë—É—Ä–≥–µ—Ä –•–∞—É—Å"',
            category: '–®–∞—É—Ä–º–∞ –∏ —Ñ–∞—Å—Ç—Ñ—É–¥',
            district: '–í–∞—Ç–∏–∫–∞–Ω',
            address: '—É–ª. –ú–æ—Ä–¥–æ–≤—Ü–µ–≤–∞, 18',
            lat: 43.0686,
            lng: 44.6577,
            description: '–ë—É—Ä–≥–µ—Ä—ã, –∫–∞—Ä—Ç–æ—à–∫–∞, –Ω–∞–ø–∏—Ç–∫–∏',
            type: 'shaurma',
            rating: 4.2,
            reviewsCount: 89,
            price: '–æ—Ç 250‚ÇΩ',
            workingHours: '10:00-23:00'
          }
        ];

        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–π–æ–Ω—ã
        const { VLADIKAVKAZ_DISTRICTS } = await import('../../data/vladikavkazDistricts');
        const districts = Object.values(VLADIKAVKAZ_DISTRICTS);

        setAttractionsData({
          attractions: demoAttractions,
          districts
        });
        
        setLoading(false);
      } catch (err) {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        setLoading(false);
      }
    };

    loadDemoData();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–∞–π–æ–Ω—É
  useEffect(() => {
    if (attractionsData) {
      if (selectedDistrict) {
        const filtered = attractionsData.attractions.filter(
          attraction => attraction.district === selectedDistrict.name
        );
        setFilteredAttractions(filtered);
      } else {
        setFilteredAttractions(attractionsData.attractions);
      }
    }
  }, [attractionsData, selectedDistrict]);

  const handleDistrictClick = (district: District) => {
    setSelectedDistrict(selectedDistrict?.id === district.id ? null : district);
  };

  const handleAttractionClick = (attraction: Attraction) => {
    setSelectedAttraction(attraction);
  };

  const clearSelection = () => {
    setSelectedDistrict(null);
    setSelectedAttraction(null);
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">‚ùå</div>
          <h2 className="text-xl font-semibold text-gray-900 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
          <p className="text-gray-600">{error}</p>
        </div>
      </div>
    );
  }

  if (!attractionsData) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üìÅ</div>
          <h2 className="text-xl font-semibold text-gray-900 mb-2">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</h2>
          <p className="text-gray-600">–î–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-2">
            üèîÔ∏è –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑ - –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —à–∞—É—Ä–º–∞
          </h1>
          <p className="text-gray-600">
            –ò—Å—Å–ª–µ–¥—É–π—Ç–µ 26 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤ –≥–æ—Ä–æ–¥–∞ –∏ –Ω–∞–π–¥–∏—Ç–µ –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞
          </p>
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
        <div className="mb-6">
          <div className="flex gap-2">
            <button
              onClick={() => setViewMode('map')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                viewMode === 'map'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-50'
              }`}
            >
              üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Ä–∞–π–æ–Ω–æ–≤
            </button>
            <button
              onClick={() => setViewMode('list')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                viewMode === 'list'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-50'
              }`}
            >
              üìã –°–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤
            </button>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–∞–π–æ–Ω–µ */}
        {selectedDistrict && (
          <div className="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <div className="flex justify-between items-start">
              <div>
                <h3 className="text-lg font-semibold text-blue-900">
                  –í—ã–±—Ä–∞–Ω —Ä–∞–π–æ–Ω: {selectedDistrict.name}
                </h3>
                <p className="text-blue-700">
                  {filteredAttractions.length} –º–µ—Å—Ç –≤ —ç—Ç–æ–º —Ä–∞–π–æ–Ω–µ
                </p>
              </div>
              <button
                onClick={clearSelection}
                className="px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors"
              >
                ‚úï –û—á–∏—Å—Ç–∏—Ç—å
              </button>
            </div>
          </div>
        )}

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ö–∞—Ä—Ç–∞/–°–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤ */}
          <div>
            {viewMode === 'map' ? (
              <VladikavkazMap 
                onDistrictClick={handleDistrictClick} 
                selectedDistrict={selectedDistrict?.id} 
              />
            ) : (
              <DistrictsList 
                onDistrictClick={handleDistrictClick} 
                selectedDistrict={selectedDistrict?.id} 
              />
            )}
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π */}
          <div>
            <AttractionsList
              attractions={filteredAttractions}
              title={selectedDistrict 
                ? `–ú–µ—Å—Ç–∞ –≤ —Ä–∞–π–æ–Ω–µ "${selectedDistrict.name}"` 
                : '–í—Å–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —à–∞—É—Ä–º–∞'
              }
              onAttractionClick={handleAttractionClick}
            />
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="mt-8 p-6 bg-white rounded-lg shadow-sm">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑—É</h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">{attractionsData.attractions.length}</div>
              <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –º–µ—Å—Ç</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">
                {attractionsData.attractions.filter(a => a.type === 'attraction').length}
              </div>
              <div className="text-sm text-gray-600">–î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-orange-600">
                {attractionsData.attractions.filter(a => a.type === 'shaurma').length}
              </div>
              <div className="text-sm text-gray-600">–®–∞—É—Ä–º–∞/–§–∞—Å—Ç—Ñ—É–¥</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-purple-600">{attractionsData.districts.length}</div>
              <div className="text-sm text-gray-600">–†–∞–π–æ–Ω–æ–≤</div>
            </div>
          </div>
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –º–µ—Å—Ç–∞ */}
        {selectedAttraction && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
              <div className="p-6">
                <div className="flex justify-between items-start mb-4">
                  <h2 className="text-2xl font-bold text-gray-900">{selectedAttraction.name}</h2>
                  <button
                    onClick={() => setSelectedAttraction(null)}
                    className="text-gray-400 hover:text-gray-600 text-2xl"
                  >
                    ‚úï
                  </button>
                </div>
                
                <div className="space-y-4">
                  <div>
                    <span className="font-semibold">–¢–∏–ø:</span> {selectedAttraction.type === 'attraction' ? 'üèõÔ∏è –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å' : 'üåÆ –®–∞—É—Ä–º–∞/–§–∞—Å—Ç—Ñ—É–¥'}
                  </div>
                  <div>
                    <span className="font-semibold">–†–∞–π–æ–Ω:</span> {selectedAttraction.district}
                  </div>
                  <div>
                    <span className="font-semibold">–ê–¥—Ä–µ—Å:</span> {selectedAttraction.address}
                  </div>
                  <div>
                    <span className="font-semibold">–û–ø–∏—Å–∞–Ω–∏–µ:</span> {selectedAttraction.description}
                  </div>
                  <div>
                    <span className="font-semibold">–†–µ–π—Ç–∏–Ω–≥:</span> {selectedAttraction.rating}‚≠ê ({selectedAttraction.reviewsCount} –æ—Ç–∑—ã–≤–æ–≤)
                  </div>
                  {selectedAttraction.price && (
                    <div>
                      <span className="font-semibold">–¶–µ–Ω—ã:</span> {selectedAttraction.price}
                    </div>
                  )}
                  {selectedAttraction.workingHours && (
                    <div>
                      <span className="font-semibold">–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</span> {selectedAttraction.workingHours}
                    </div>
                  )}
                  <div>
                    <span className="font-semibold">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</span> {selectedAttraction.lat.toFixed(6)}, {selectedAttraction.lng.toFixed(6)}
                  </div>
                </div>

                <div className="mt-6 flex gap-3">
                  <button
                    onClick={() => {
                      const url = `https://yandex.ru/maps/?pt=${selectedAttraction.lng},${selectedAttraction.lat}&z=16&l=map`;
                      window.open(url, '_blank');
                    }}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ
                  </button>
                  <button
                    onClick={() => setSelectedAttraction(null)}
                    className="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors"
                  >
                    –ó–∞–∫—Ä—ã—Ç—å
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
} 